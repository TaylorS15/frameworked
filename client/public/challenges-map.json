{
  "1-Counter": {
    "frameworks": {
      "react": {
        "code": {
          "App_js": "import { useState } from 'react'\n\nexport default function App() {\n\tconst [value, setValue] = useState(0);\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Counter</h1>\n\t\t\t<button onClick={() => setValue(value + 1)}>Click Me</button>\n\t\t\t<p>{value}</p>\n\t\t</div>\n\t);\n}",
          "styles_css": "body {\n\tcolor: white;\n}"
        },
        "instructions": "Create a button that increments a counter, which is displayed in the UI. Use the useState hook to store the counter value."
      }
    },
    "difficulty": "easy"
  },
  "2-Counter": {
    "frameworks": {
      "react": {
        "code": {
          "App_js": "import { useState } from 'react'\n\nexport default function App() {\n\tconst [value, setValue] = useState(0);\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Counter</h1>\n\t\t\t<button onClick={() => setValue(value + 1)}>Click Me</button>\n\t\t\t<p>{value}</p>\n\t\t</div>\n\t);\n}",
          "styles_css": "body {\n\tcolor: white;\n}"
        },
        "instructions": "Create a button that increments a counter, which is displayed in the UI. Use the useState hook to store the counter value."
      }
    },
    "difficulty": "easy"
  },
  "3-Counter": {
    "frameworks": {
      "react": {
        "code": {
          "App_js": "import { useState } from 'react'\n\nexport default function App() {\n\tconst [value, setValue] = useState(0);\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Counter</h1>\n\t\t\t<button onClick={() => setValue(value + 1)}>Click Me</button>\n\t\t\t<p>{value}</p>\n\t\t</div>\n\t);\n}",
          "styles_css": "body {\n\tcolor: white;\n}"
        },
        "instructions": "Create a button that increments a counter, which is displayed in the UI. Use the useState hook to store the counter value."
      }
    },
    "difficulty": "easy"
  },
  "4-Counter": {
    "frameworks": {
      "react": {
        "code": {
          "App_js": "import { useState } from 'react'\n\nexport default function App() {\n\tconst [value, setValue] = useState(0);\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Counter</h1>\n\t\t\t<button onClick={() => setValue(value + 1)}>Click Me</button>\n\t\t\t<p>{value}</p>\n\t\t</div>\n\t);\n}",
          "styles_css": "body {\n\tcolor: white;\n}"
        },
        "instructions": "Create a button that increments a counter, which is displayed in the UI. Use the useState hook to store the counter value."
      }
    },
    "difficulty": "easy"
  },
  "5-Counter": {
    "frameworks": {
      "react": {
        "code": {
          "App_js": "import { useState } from 'react'\n\nexport default function App() {\n\tconst [value, setValue] = useState(0);\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Counter</h1>\n\t\t\t<button onClick={() => setValue(value + 1)}>Click Me</button>\n\t\t\t<p>{value}</p>\n\t\t</div>\n\t);\n}",
          "styles_css": "body {\n\tcolor: white;\n}"
        },
        "instructions": "Create a button that increments a counter, which is displayed in the UI. Use the useState hook to store the counter value."
      }
    },
    "difficulty": "easy"
  },
  "6-Counter": {
    "frameworks": {
      "react": {
        "code": {
          "App_js": "import { useState } from 'react'\n\nexport default function App() {\n\tconst [value, setValue] = useState(0);\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Counter</h1>\n\t\t\t<button onClick={() => setValue(value + 1)}>Click Me</button>\n\t\t\t<p>{value}</p>\n\t\t</div>\n\t);\n}",
          "styles_css": "body {\n\tcolor: white;\n}"
        },
        "instructions": "Create a button that increments a counter, which is displayed in the UI. Use the useState hook to store the counter value."
      }
    },
    "difficulty": "easy"
  },
  "7-Counter": {
    "frameworks": {
      "react": {
        "code": {
          "App_js": "import { useState } from 'react'\n\nexport default function App() {\n\tconst [value, setValue] = useState(0);\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Counter</h1>\n\t\t\t<button onClick={() => setValue(value + 1)}>Click Me</button>\n\t\t\t<p>{value}</p>\n\t\t</div>\n\t);\n}",
          "styles_css": "body {\n\tcolor: white;\n}"
        },
        "instructions": "Create a button that increments a counter, which is displayed in the UI. Use the useState hook to store the counter value."
      }
    },
    "difficulty": "easy"
  },
  "8-Counter": {
    "frameworks": {
      "react": {
        "code": {
          "App_js": "import { useState } from 'react'\n\nexport default function App() {\n\tconst [value, setValue] = useState(0);\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Counter</h1>\n\t\t\t<button onClick={() => setValue(value + 1)}>Click Me</button>\n\t\t\t<p>{value}</p>\n\t\t</div>\n\t);\n}",
          "styles_css": "body {\n\tcolor: white;\n}"
        },
        "instructions": "Create a button that increments a counter, which is displayed in the UI. Use the useState hook to store the counter value."
      }
    },
    "difficulty": "easy"
  },
  "9-Counter": {
    "frameworks": {
      "react": {
        "code": {
          "App_js": "import { useState } from 'react'\n\nexport default function App() {\n\tconst [value, setValue] = useState(0);\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Counter</h1>\n\t\t\t<button onClick={() => setValue(value + 1)}>Click Me</button>\n\t\t\t<p>{value}</p>\n\t\t</div>\n\t);\n}",
          "styles_css": "body {\n\tcolor: white;\n}"
        },
        "instructions": "Create a button that increments a counter, which is displayed in the UI. Use the useState hook to store the counter value."
      }
    },
    "difficulty": "easy"
  },
  "10-Counter": {
    "frameworks": {
      "react": {
        "code": {
          "App_js": "import { useState } from 'react'\n\nexport default function App() {\n\tconst [value, setValue] = useState(0);\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Counter</h1>\n\t\t\t<button onClick={() => setValue(value + 1)}>Click Me</button>\n\t\t\t<p>{value}</p>\n\t\t</div>\n\t);\n}",
          "styles_css": "body {\n\tcolor: white;\n}"
        },
        "instructions": "Create a button that increments a counter, which is displayed in the UI. Use the useState hook to store the counter value."
      }
    },
    "difficulty": "easy"
  }
}
